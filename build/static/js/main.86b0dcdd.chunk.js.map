{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Entry.js","components/Persons.js","services/phonebook.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","PersonForm","addNewPerson","newName","handleNewPerson","newNumber","handleNewNumber","onSubmit","type","Entry","name","number","id","handleRemoval","key","onClick","Persons","persons","useState","numbersToShow","person","toLowerCase","includes","map","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","setPersons","setNewName","setNewNumber","setFilter","statusMessage","setStatusMessage","statusColor","setStatusColor","useEffect","phonebook","initialPersons","message","className","event","target","preventDefault","personObject","some","window","confirm","changedPerson","find","n","returnedPerson","catch","error","console","log","setTimeout","concat","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86b0dcdd.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ( { filter, handleFilter} ) => {\n    return(\n        <div>\n        filter shown with <input value={filter}  onChange={handleFilter}/>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ( {addNewPerson, newName, handleNewPerson, newNumber, handleNewNumber }) => {\n    return(\n        <form onSubmit={addNewPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNewPerson}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Entry = ({ name, number, id, handleRemoval }) => {\n    return(\n            <p key={id}>{name} {number} <button onClick={() => handleRemoval(id)}>delete</button></p>\n    )\n}\n\nexport default Entry","import React, { useState }  from 'react'\nimport Entry from './Entry'\n\nconst Persons = ( {filter, persons, handleRemoval} ) => {\n   /*\n    console.log(filter)\n    console.log(persons)\n    console.log(handleRemoval)\n    */\n\n    const [ match ] = useState(false)\n\n    const numbersToShow = match\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    const rows = () => numbersToShow.map(person => <Entry handleRemoval={handleRemoval} key={person.id} id={person.id} name={person.name} number={person.number} />)\n    return(\n        <div>\n            {rows()}\n        </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n        return response.data })\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id, newObject) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport phonebook from './services/phonebook'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ statusMessage, setStatusMessage ] = useState(null)\n  const [ statusColor, setStatusColor ] = useState('done')\n\n  useEffect(() => {\n    phonebook\n      .getAll()\n      .then(initialPersons => {\n         setPersons(initialPersons)\n      })\n  }, [])\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    //console.log('Lisätään uusi nimi:', newName)\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if(!persons.some(person => person.name === newName)) {\n      //console.log('Luotu:', personObject)\n      phonebook\n       .create(personObject)\n       .then(() => {\n         setPersons(persons.concat(personObject))\n         setNewName('')\n         setNewNumber('')\n       })\n\n     \n\n       setStatusColor('done')\n         setStatusMessage(`Added ${newName}`)\n         setTimeout(() => {\n           setStatusMessage(null)\n         }, 5000)\n      \n    } else {\n      let replace = window.confirm(`${newName} is already added to phonebook.\n      replace the old number with a new one?`)\n\n      if(replace) {\n        const person = persons.find(n => n.name === newName)\n        const changedPerson = { ...person, number: newNumber}\n\n        //console.log(`changedNumber:`, changedPerson)\n        \n        phonebook\n          .update(changedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(n => n.id !== changedPerson.id ? n : returnedPerson))\n          }).catch(error => {\n             console.log(error)\n             setStatusColor('error')\n             setStatusMessage(`${newName} was already removed from server`)\n             setTimeout(() => {\n             setStatusMessage(null)\n             }, 5000)\n             setPersons(persons.filter(n => n.id !== changedPerson.id))\n             \n          })\n          setStatusColor('done')\n          setStatusMessage(`Changed ${newName} number to ${newNumber}`)\n          setTimeout(() => {\n            setStatusMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n      }\n    }\n  }\n\n  const handleRemoval = (id) => {\n    const personObject = persons.find(n => n.id === id)\n    let rmv = window.confirm(`Remove ${personObject.name} ?`)\n    if(rmv) {\n      //console.log(`Pääsi tarkistuksesta`)\n      phonebook\n      .remove(id, personObject)\n      .then(() => {\n         //console.log(`Poistettu id: ${id}`)\n         phonebook.getAll()\n          .then(newPersons => {\n             setPersons(newPersons.map(person => person.id !== id ? person: newPersons))\n             //console.log(`Haettu uusi lista`, newPersons)\n          })\n          setStatusColor('done')\n          setStatusMessage(`Succesfully removed ${personObject.name} from phonebook.`)\n          setTimeout(() => {\n          setStatusMessage(null)\n             }, 5000)\n      }).catch(error => {\n        //console.log(`Handle removal error`)\n        setStatusColor('error')\n        setStatusMessage(`Information ${personObject.name} has already been removed from server`)\n        setTimeout(() => {\n          setStatusMessage(null)\n        }, 5000)\n        setPersons(persons.filter(n => n.id !== persons.id))\n      })\n    }    \n  }\n\n  const handleNewPerson = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const Status = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return(\n      <div className={statusColor}>\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Status message={statusMessage} />\n      <Filter \n        filter={filter} \n        handleFilter={handleFilter}\n        />\n      <h2>add a new</h2>\n      <PersonForm \n        addNewPerson={addNewPerson}\n        newName={newName} \n        handleNewNumber={handleNewNumber}\n        newNumber={newNumber}\n        handleNewPerson={handleNewPerson}\n        />\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons}\n        filter={filter}\n        handleRemoval={handleRemoval}\n      />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}