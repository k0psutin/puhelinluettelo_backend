{"version":3,"sources":["components/Filter.js","services/personService.js","components/PersonForm.js","components/PersonList.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","nameFilter","onChange","event","setNameFilter","target","baseUrl","query","queryObject","then","response","data","axios","get","newObject","post","id","put","delete","PersonForm","persons","setPersons","setErrorMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","nameExists","find","person","name","toLowerCase","isValidName","trim","length","isValidNumber","updateNumber","window","confirm","newPerson","number","personService","returnedPerson","map","concat","type","PersonList","filteredList","className","onClick","filtPersons","filter","catch","Notification","message","App","error","setError","setTimeout","useEffect","personList","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.201835fb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    \r\n    const handleFilterChange = (event) => props.setNameFilter(event.target.value)\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n        filter shown with\r\n        <input value={props.nameFilter} onChange={handleFilterChange} />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst query = (queryObject) => {\r\n    return queryObject.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst getAll = () => { \r\n    return query(axios.get(baseUrl))\r\n}\r\n\r\nconst create = newObject => { \r\n    return query(axios.post(baseUrl, newObject))\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return query(axios.put(`${baseUrl}/${id}`, newObject))\r\n}\r\n\r\nconst remove = (id) => {\r\n    return query(axios.delete(`${baseUrl}/${id}`))\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default  { getAll, create, update, remove }","import React, { useState } from 'react'\r\nimport personService from '../services/personService'\r\n\r\n\r\n\r\nconst PersonForm = ({ persons, setPersons, setErrorMessage }) => {\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber] = useState('')\r\n\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n\r\n    const addName = (event) => {\r\n        event.preventDefault()\r\n    \r\n        const nameExists = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\r\n        const isValidName = newName.trim().length > 5\r\n        const isValidNumber = newNumber.length > 5\r\n    \r\n        if (!isValidName || !isValidNumber) {\r\n          const msg = !isValidName ? 'Name should be at least 6 chars long.' : 'Number should be at least 6 digits long.'\r\n          setErrorMessage(msg, 'error')\r\n          return null\r\n        }\r\n\r\n        let updateNumber = false\r\n\r\n        if (nameExists) {\r\n          updateNumber = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n          if (!updateNumber) {\r\n            return null\r\n          }\r\n        }\r\n\r\n        const newPerson = {\r\n          name: newName,\r\n          number: newNumber\r\n        }\r\n    \r\n        if (updateNumber) {\r\n          personService\r\n            .update(nameExists.id, newPerson)\r\n            .then(returnedPerson => {\r\n              setPersons(persons.map(person => person.id !== nameExists.id ? person : returnedPerson))\r\n              setNewName('')\r\n              setNewNumber('')\r\n              setErrorMessage(`${newName} updated successfully!`, 'done')\r\n          })\r\n        } else {\r\n          personService\r\n            .create(newPerson)\r\n              .then(returnedPerson => {\r\n              setPersons(persons.concat(returnedPerson))\r\n              setNewName('')\r\n              setNewNumber('')\r\n              setErrorMessage(`${newName} added successfully!`, 'done')\r\n          })\r\n        }\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <h2>Add a new number</h2>\r\n        <form onSubmit={addName}>\r\n          <div>\r\n            name \r\n            <input value={newName} onChange={handleNameChange}/>\r\n          </div>\r\n          <div>\r\n            number \r\n            <input value={newNumber} onChange={handleNumberChange}/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\nimport personService from '../services/personService'\r\n\r\nimport '../index.css'\r\n\r\nconst PersonList = ({ persons, filteredList, setPersons, setErrorMessage}) => {\r\n    const handlePersonRemoval = (name, id) => {\r\n        const isApproved = window.confirm(`Delete ${name}?`)\r\n        if (!isApproved) {\r\n            return\r\n        }\r\n\r\n       \r\n        personService\r\n          .remove(id)\r\n            .then(() => {\r\n                const filtPersons = persons.filter(person => person.id !== id)\r\n                setPersons([...filtPersons])\r\n                setErrorMessage(`${name} successfully removed.`, 'done')\r\n        }).catch(() => {\r\n            setErrorMessage(`${name} has already been removed from the server.`, 'error')\r\n            const filtPersons = persons.filter(person => person.id !== id)\r\n            setPersons([...filtPersons])\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n        <h2>Numbers</h2>\r\n        <ul>\r\n        { filteredList.map(person => \r\n            <li className=\"person\" key={person.id}>{ person.name } { person.number } <button onClick={() => handlePersonRemoval(person.name, person.id)}>delete</button></li>\r\n          )}\r\n         </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonList","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport PersonList from './components/PersonList'\r\nimport personService from './services/personService'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ nameFilter, setNameFilter] = useState('')\r\n  const [ error, setError ] = useState({ message: null, type: null})\r\n\r\n  const setErrorMessage = (message, type) => {\r\n    setError({ message: message, type: type })\r\n    setTimeout(() => setError({ message: null , type: null }), 5000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(personList => {\r\n        setPersons(personList)\r\n      })\r\n  }, [])\r\n\r\n  const filteredList = persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\r\n  \r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={error.message} className={error.type}/>\r\n      <Filter nameFilter={nameFilter} setNameFilter={setNameFilter}/>\r\n      <PersonForm setErrorMessage={setErrorMessage} persons={persons} setPersons={setPersons}/>\r\n      <PersonList setErrorMessage={setErrorMessage} persons={persons} setPersons={setPersons} filteredList={filteredList}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}